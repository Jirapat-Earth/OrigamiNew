plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.flutter_project"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileSdkVersion 34
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_project"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.1"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
        }
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


dependencies {
    implementation 'io.flutter:flutter_embedding_debug:2.0.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"  // ตัวอย่าง dependencies สำหรับ Kotlin

    implementation 'androidx.core:core-ktx:1.6.0'  // ตัวอย่าง dependencies สำหรับ AndroidX Core

    implementation 'androidx.appcompat:appcompat:1.3.1'  // ตัวอย่าง dependencies สำหรับ AppCompat

    implementation 'com.google.android.material:material:1.4.0'  // ตัวอย่าง dependencies สำหรับ Material Design Components

    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'  // ตัวอย่าง dependencies สำหรับ ConstraintLayout

    implementation 'com.google.android.gms:play-services-location:18.0.0'  // ตัวอย่าง dependencies สำหรับ Google Play Services Location

    implementation 'com.google.maps.android:maps-ktx:3.2.1'  // ตัวอย่าง dependencies สำหรับ Google Maps Android SDK

    // เพิ่ม dependencies ต่าง ๆ ที่คุณใช้ในโปรเจกต์ของคุณต่อไปนี้
}
